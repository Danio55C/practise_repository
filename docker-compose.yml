version: '3.8'
services:
  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdb  
    
      
    ports:
    - "3306:3306"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d 


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
     - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      
  memcached:
      image: memcached:latest
      container_name: memcached
      restart: always
      ports:
        - "11211:11211" 
      command:
        - --conn-limit=1024
        - --memory-limit=64
        - --threads=4  

  elasticsearch:
    image: elasticsearch:8.17.0
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    restart: always  

  python:
    build: ./python
    container_name: python
    command: sh -c "sleep 20s ; python3 main.py"
    restart: no
    depends_on:
      - mysql
      - kafka
      - memcached
      - elasticsearch
    

 
  











